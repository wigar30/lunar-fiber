// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"lunar-commerce-fiber/internal/app/config"
	"lunar-commerce-fiber/internal/presenter/http/controller"
	auth2 "lunar-commerce-fiber/internal/presenter/http/controller/auth"
	role3 "lunar-commerce-fiber/internal/presenter/http/controller/role"
	"lunar-commerce-fiber/internal/repository/role"
	"lunar-commerce-fiber/internal/repository/user"
	"lunar-commerce-fiber/internal/usecase/auth"
	role2 "lunar-commerce-fiber/internal/usecase/role"
)

// Injectors from wire.go:

func NewWire() config.HTTPServiceInterface {
	envConfigs := config.NewViper()
	app := NewFiber(envConfigs)
	logger := config.NewLogger(envConfigs)
	database := config.NewConnMySql(envConfigs, logger)
	roleRepositoryInterface := role.NewRoleRepository(database)
	roleUseCaseInterface := role2.NewRoleUseCase(roleRepositoryInterface)
	roleController := role3.NewRoleController(roleUseCaseInterface)
	userRepositoryInterface := user.NewUserRepository(database)
	authUseCaseInterface := auth.NewAuthUseCase(userRepositoryInterface, envConfigs)
	authController := auth2.NewAuthController(authUseCaseInterface)
	controllerController := controller.NewController(roleController, authController)
	httpServiceInterface := config.NewListenApp(app, controllerController, envConfigs, logger)
	return httpServiceInterface
}
